{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"helix \u00b6 Helix is a library written in Rust providing core features for getting your N64 software running on PC and other systems. Features Provided \u00b6 [x] Audio Playback (audio) [x] Speech Synthesis (speech) [x] TCP Stream (network) For details on each of the features provided please see our documentation[ https://dcvz.github.io/helix/ ]. How to setup? \u00b6 For setup and more in-depth information please see our documentation[ https://dcvz.github.io/helix/ ].","title":"Overview"},{"location":"#helix","text":"Helix is a library written in Rust providing core features for getting your N64 software running on PC and other systems.","title":"helix"},{"location":"#features-provided","text":"[x] Audio Playback (audio) [x] Speech Synthesis (speech) [x] TCP Stream (network) For details on each of the features provided please see our documentation[ https://dcvz.github.io/helix/ ].","title":"Features Provided"},{"location":"#how-to-setup","text":"For setup and more in-depth information please see our documentation[ https://dcvz.github.io/helix/ ].","title":"How to setup?"},{"location":"integrating/","text":"Integrating \u00b6 Getting Helix into your project. C/C++ Project \u00b6 If you\u2019re working on a C or C++ project the recommended way of integrating Helix into your project is using CMake. You can easily build and link this library by using Corrosion , a tool that integrate Rust libraries into C/C++ projects. You\u2019ll want to: Add this library as a submodule (or copy it) into your project Enable Corrosion using FetchContent (see their README) Include the features you want to be built using FEATURES . audio is always included. Link against the helix library Include the include folder of helix so your program can see the available methods NOTE: If you get a build error that certain header methods are not implemented, you\u2019re likely not building with that feature enabled. Example: corrosion_import_crate(MANIFEST_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../helix/Cargo.toml FEATURES network) # methods in these headers will work: # include <helix/network.h>, <helix/audio.h> # methods in these headers won't work: # include <helix/speech.h> Rust Project \u00b6 If you\u2019re working on a Rust project, you can add Helix via cargo add helix .","title":"Integrating"},{"location":"integrating/#integrating","text":"Getting Helix into your project.","title":"Integrating"},{"location":"integrating/#cc-project","text":"If you\u2019re working on a C or C++ project the recommended way of integrating Helix into your project is using CMake. You can easily build and link this library by using Corrosion , a tool that integrate Rust libraries into C/C++ projects. You\u2019ll want to: Add this library as a submodule (or copy it) into your project Enable Corrosion using FetchContent (see their README) Include the features you want to be built using FEATURES . audio is always included. Link against the helix library Include the include folder of helix so your program can see the available methods NOTE: If you get a build error that certain header methods are not implemented, you\u2019re likely not building with that feature enabled. Example: corrosion_import_crate(MANIFEST_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../helix/Cargo.toml FEATURES network) # methods in these headers will work: # include <helix/network.h>, <helix/audio.h> # methods in these headers won't work: # include <helix/speech.h>","title":"C/C++ Project"},{"location":"integrating/#rust-project","text":"If you\u2019re working on a Rust project, you can add Helix via cargo add helix .","title":"Rust Project"}]}