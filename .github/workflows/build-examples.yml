name: build-examples
on:
  pull_request:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  macos-cpp-example:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: brew install ninja SDL2
    - name: Build
      working-directory: examples/cpp
      run: |
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Release -GNinja
        cmake --build build --config Release
  macos-rust-example:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: brew install ninja SDL2
    - name: Build
      working-directory: examples/rust
      run: |
        cargo build --all-features
  ubuntu-cpp-example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update apt
      run: sudo apt update
    - name: Install deps
      run: |
        sudo apt-get install ninja-build
        sudo apt-get install libasound2-dev
        sudo apt-get install libspeechd-dev
        sudo apt-get install libsdl2-dev
    - name: Install latest SDL
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        wget https://www.libsdl.org/release/SDL2-2.26.1.tar.gz
        tar -xzf SDL2-2.26.1.tar.gz
        cd SDL2-2.26.1
        ./configure
        make -j 10
        sudo make install
        sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
    - name: Build
      working-directory: examples/cpp
      run: |
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Release -GNinja
        cmake --build build --config Release
  ubuntu-rust-example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update apt
      run: sudo apt update
    - name: Install deps
      run: |
        sudo apt-get install ninja-build
        sudo apt-get install libasound2-dev
        sudo apt-get install libspeechd-dev
        sudo apt-get install libsdl2-dev
    - name: Install latest SDL
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        wget https://www.libsdl.org/release/SDL2-2.26.1.tar.gz
        tar -xzf SDL2-2.26.1.tar.gz
        cd SDL2-2.26.1
        ./configure
        make -j 10
        sudo make install
        sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
    - name: Build
      working-directory: examples/rust
      run: |
        cargo build --all-features
  windows-cpp-example:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: |
        choco install ninja
        vcpkg integrate install
        vcpkg install sdl2-ttf sdl2 --triplet x64-windows-static

        "C:\vcpkg\installed\x64-windows-static\bin" >> $env:GITHUB_PATH
        "C:\vcpkg\installed\x64-windows-static\include" >> $env:INCLUDE
        "C:\vcpkg\installed\x64-windows-static\lib" >> $env:LIB
    - name: Build
      working-directory: examples/cpp
      run: |
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Release
        cmake --build build --config Release
  windows-rust-example:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install deps
      run: |
        choco install ninja
        vcpkg install sdl2-ttf sdl2 --triplet x64-windows
    - name: Export VCPKG environment
      run: |
        "C:\vcpkg\installed\x64-windows-static\bin" >> $env:GITHUB_PATH
        echo "INCLUDE=C:\vcpkg\installed\x64-windows\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIB=C:\vcpkg\installed\x64-windows\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Build
      working-directory: examples/rust
      run: |
        cargo build --all-features
